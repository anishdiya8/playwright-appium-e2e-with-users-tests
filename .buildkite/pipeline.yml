env:
  DEVICE_NAME: "iPhone 16 Pro"
  API_BASE_URL: "https://sdbnrxt339.execute-api.ap-southeast-2.amazonaws.com"
  X_API_KEY: "demo-key-123"
  # Pre-signed S3 URL:
  APP_ZIP_URL: "https://ios-ci-artifacts-bucket-anish.s3.ap-southeast-2.amazonaws.com/ios/SimpleAPIAppanish.app.zip?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAUHVSWCJQTPALQ4XL%2F20250927%2Fap-southeast-2%2Fs3%2Faws4_request&X-Amz-Date=20250927T224608Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=ab10be1924c4bf5304dbedc9f8aedf186b46557f39dec24865d638fdf8accc6e"

steps:
  - label: ":package: Download prebuilt iOS app"
    key: "build-app"
    agents: { queue: "default" }
    commands:
      - mkdir -p artifacts
      - echo "Downloading app zip"
      - curl -fL "$APP_ZIP_URL" -o artifacts/SimpleAPIAppanish.app.zip
      - du -h artifacts/SimpleAPIAppanish.app.zip || true
      - buildkite-agent artifact upload "artifacts/SimpleAPIAppanish.app.zip"

  - wait

  - label: ":test_tube: E2E (Playwright + Appium)"
    key: "e2e"
    agents: { queue: "default" }
    concurrency: 1
    concurrency_group: "ios-simulator"
    timeout_in_minutes: 60
    commands:
      - set -euo pipefail

      # deps
      - node --version && npm --version
      - npm ci

      # bring app artifact into workspace
      - buildkite-agent artifact download "artifacts/SimpleAPIAppanish.app.zip" .
      - du -h artifacts/SimpleAPIAppanish.app.zip || true
      - unzip -oq artifacts/SimpleAPIAppanish.app.zip -d artifacts
      - ls -lah artifacts

      # Robust .app detection without 'find'
      - |
        APP_PATH=""
        for CAND in artifacts/*.app artifacts/*/*.app; do
          if [ -d "$CAND" ]; then
            APP_PATH="$CAND"
            break
          fi
        done
        if [ -z "${APP_PATH}" ] || [ ! -d "${APP_PATH}" ]; then
          echo "ERROR: APP_PATH not found"
          ls -lR artifacts || true
          exit 1
        fi
        echo "Using APP_PATH=${APP_PATH}"
        export APP_PATH

      # boot sim + start appium
      - bash scripts/sim-boot.sh "$DEVICE_NAME"
      - export SIM_NAME="$DEVICE_NAME"
      - bash scripts/start-appium.sh
      - bash scripts/wait-on-http.sh http://127.0.0.1:4723/status 45

      # hosted API checks
      - echo "Using API_BASE_URL=$API_BASE_URL"
      - env | sort | grep -E 'API_BASE_URL|DEVICE_NAME|X_API_KEY' || true
      - curl -fsS "$API_BASE_URL/healthz" || echo "No /healthz (that's fine)"

      # run tests
      - export DEVICE_NAME="$DEVICE_NAME" API_BASE_URL="$API_BASE_URL" X_API_KEY="$X_API_KEY"
      - npm run test:ci

      # stop appium
      - bash scripts/stop-appium.sh || { echo "Dumping appium.log due to stop failure"; tail -n +1 artifacts/appium.log || true; exit 1; }
    artifact_paths:
      - "playwright-report/**"
      - "junit-report.xml"
      - "artifacts/**"

  - wait

  - label: ":memo: Annotate JUnit"
    agents: { queue: "default" }
    plugins:
      - junit-annotate#v2.4.0:
          artifacts: "junit-report.xml"
          soft_fail: true
    commands:
      - echo "Annotating JUnit results"